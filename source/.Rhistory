library(stats)
library(dplyr)
library(magrittr)
raw_data = read.csv(’data.csv’)
View(raw_data)
library(stats)
library(dplyr)
library(magrittr)
raw_data = read.csv('data.csv')
View(raw_data)
library(stats)
library(dplyr)
library(magrittr)
raw_data = read.csv('data.csv')
view(raw_data)
raw_data = read.csv('data.csv')
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
library(stats)
library(dplyr)
library(magrittr)
raw_data = read.csv('data.csv')
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
data = raw_data %>% select('Boost_Clock','Core_Speed','Max_Power','Memory','Memory_Bus', 'Memory_Speed','Shader','TMUs');
View(data)
View(raw_data)
View(data)
data = data %>% filter(!(is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Shader) | is.na(TMUs) ));
View(data)
View(data)
library(stats)
library(dplyr)
library(magrittr)
raw_data = read.csv('data.csv')
View(raw_data)
View(raw_data)
View(raw_data)
raw_data = read.csv('data.csv')
View(raw_data)
data = raw_data %>% select('Boost_Clock','Core_Speed','Max_Power','Memory','Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price','Shader','TMUs');
View(data)
df = data %>% filter(!(is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs) ));
View(data)
View(raw_data)
View(df)
View(data)
raw_data = read.csv('data.csv')
View(raw_data)
View(raw_data)
View(raw_data)
View(raw_data)
data = raw_data %>% select('Manufacturer','Name','Architecture','Boost_Clock','Core_Speed','Max_Power','Memory','Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price','Shader','TMUs');
View(data)
df = data %>% filter(( is.na(Manufacturer) | is.na(Name) | is.na(Architecture) | is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs)));
View(data)
View(df)
View(df)
df = data %>% filter(!( is.na(Manufacturer) | is.na(Name) | is.na(Architecture) | is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs)));
View(data)
df = data %>% filter(!( is.na(Manufacturer) | is.na(Name) | is.na(Architecture) | is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs)));
View(df)
Price.graph<-ggplot(lmPrice, aes(x=Release_Price, y=Max_Power))+geom_point()
Price.graph
Price.graph<-ggplot(lmPrice, aes(x=Release_Price, y=Max_Power))+geom_point()
library(ggplot2)
Price.graph<-ggplot(lmPrice, aes(x=Release_Price, y=Max_Power))+geom_point()
library(stats)
library(dplyr)
library(magrittr)
library(ggplot2)
raw_data = read.csv('data.csv')
View(raw_data)
data = raw_data %>% select('Manufacturer','Name','Architecture','Boost_Clock','Core_Speed','Max_Power','Memory','Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price','Shader','TMUs');
View(data)
df = data %>% filter(!( is.na(Manufacturer) | is.na(Name) | is.na(Architecture) | is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs)));
View(df)
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "Release_Price", ylab = "Number of GPUs", col = rainbow(9));
lmPrice = lm(Release_Price ~ Boost_Clock + Core_Speed + Max_Power + Memory + Memory_Bus + Memory_Speed + Shader + TMUs, df)
summary(lmPrice)
lmPriceNoMem = lm(Release_Price ~ Boost_Clock + Core_Speed + Max_Power + Memory_Bus + Memory_Speed + Shader + TMUs, df)
summary(lmPriceNoMem)
lmPrice_Mem = lm(Release_Price~ Memory, df[,c('Release_Price','Memory')])
anova(lmPrice_Mem)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted_values", ylab = "residuals")
Price.graph<-ggplot(lmPrice, aes(x=Release_Price, y=Max_Power))+geom_point()
Price.graph
Price.graph <- Price.graph + geom_smooth(method="lm", col="black")
Price.graph
ggplot(data,aes(Release_Year,fill=rownames(data)))+
geom_bar(stat = "identity")+guides(fill=FALSE)
ggplot(data,aes(Release_Year))+
geom_bar(stat = "identity", fill = rainbow(n=length(data$Release_Year)))
ggplot(data,aes(Release_Year))+
geom_bar(stat = "identity", fill = rainbow(n=length(data$Release_Year)))
ggplot(data,aes(Release_Year))+
geom_bar(stat = "count", fill = rainbow(n=length(data$Release_Year)))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count")
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(n=length(data$Release_Year))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(n=length(data$Release_Year)))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(n=length(data$Release_Year)))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(n=length(data$Release_Year)))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(n=length(data$Release_Year))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count"))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count")))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count")
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(9))
ggplot(data = data) +
geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(20))
ggplot(data = df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(20))
ggplot(data = df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
ggplot(data = df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(7))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "identity", fill = rainbow(6))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
ggplot(df) + geom_bar(aes(x = "Year", y = "Number of GPUs"), stat = "count", fill = rainbow(6))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + xlab("Dose (mg)") + ylab("Teeth length")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6), vjust=1) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6), vjust=3) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) +  scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.5),1)) + + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) +  scale_x_continuous(breaks = round(seq(min(df$x), max(df$x), by = 0.5),1)) + + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) +  scale_x_continuous(breaks = round(seq(min(df$Release_Year), max(df$Release_Year), by = 1),1)) + + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) +  scale_x_continuous(breaks = round(seq(min(df$Release_Year), max(df$Release_Year), by = 0.5),1)) + + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = scales::pretty_breaks(n = 10))  + + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = scales::pretty_breaks(n = 1)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = scales::pretty_breaks(n = 30)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
+ scale_x_continuous(breaks = pretty(df$Release_Year, n = 10))
+ scale_y_continuous(breaks = pretty(df$Release_Year, n = 10))
+ xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
+ scale_x_continuous(breaks = pretty(df$Release_Year, n = 10))
+ scale_y_continuous(breaks = pretty(df$Release_Year, n = 10))
+ xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
+ scale_x_continuous(breaks = pretty(df$Release_Year, n = 10))
+ scale_y_continuous(breaks = pretty(df$count, n = 10))
+ xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
+ scale_x_continuous(breaks = pretty(df$Release_Year, n = 10))
+ xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
+ scale_x_continuous(breaks = pretty(df$Release_Year, n = 10))
+ xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6))
+ scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
hist(df$Release_Year, main="Distribution of Release_Price", xlab = "Release_Price", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "Price", ylab = "Number of GPUs", col = rainbow(9));
ggplot(df) + geom_bar(aes(x = Release_Price), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Price), stat = "count", fill = rainbow(101)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "Price", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollars", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollar", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Year, main="Distribution of Release_Year", xlab = "Year", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollar", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Year, main="Distribution of Release_Year", xlab = "Year", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollar", ylab = "Number of GPUs", col = rainbow(9));
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollar", ylab = "Number of GPUs", col = rainbow(9))
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollar", ylab = "Number of GPUs", col = rainbow(9))
df = data %>% filter(!( is.na(Manufacturer) | is.na(Name) | is.na(Architecture) | is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) |
is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs)))
View(df)
hist(df$Release_Price, main="Distribution of Release_Price", xlab = "US Dollar", ylab = "Number of GPUs", col = rainbow(9))
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted_values", ylab = "residuals")
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
data_2 = read.csv('house_price')
View(data_2)
data_2 = read.csv('house_price')
View(data_2)
data_2 = read.csv('house_price.csv')
View(data_2)
df_2 = data_2 %>% select('price', 'sqft_living15', 'floors','condition','sqft_above','sqft_living')
df_2 = df_2 %>% filter(!(is.na(price) | is.na(sqft_living15) | is.na(sqft_living) | is.na(floors) | is.na(condition) | is.na(sqft_above)))
lmPrice_2 = lm(log.price ~ floors + condition + log.sqft_living15 + log.sqft_living + log.sqft_above , df_2)
View(data_2)
table = data.frame(
Name = c('mean', 'median', 'sd', 'min', 'max'),
log.price = c(mean(df[,'log.price']), median(df[,'log.price']), sd(df[,'log.price']), min(df[,'log.price']), max(df[,'log.price'])))
table = data.frame(
Name = c('mean', 'median', 'sd', 'min', 'max'),
log.price = c(mean(df[,'log.Release_Price']), median(df[,'log.price']), sd(df[,'log.price']), min(df[,'log.price']), max(df[,'log.price'])))
table = data.frame(
Name = c('mean', 'median', 'sd', 'min', 'max'),
log.price = c(mean(df_2[,'log.price']), median(df_2[,'log.price']), sd(df_2[,'log.price']), min(df_2[,'log.price']), max(df_2[,'log.price'])))
table = data.frame(
Name = c('mean', 'median', 'sd', 'min', 'max'),
log.price = c(mean(df_2[,'price']), median(df_2[,'price']), sd(df_2[,'price']), min(df_2[,'price']), max(df_2[,'price'])))
View(table)
