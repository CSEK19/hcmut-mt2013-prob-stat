View(df_knn)
View(df_knn)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10)
df_knn = DataFrame()
df_knn = data.frame
View(df_knn)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10)
View(df_knn)
View(data)
df_knn = data
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10)
View(df_knn)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 100)
View(df_knn)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
exp(predict(lmPrice, newData, interval = "confidence", level = 0.95))
plot(
lmPrice$fitted.values,
lmPrice$residuals,
col = "blue",
xlab = "fitted.values",
ylab = "residuals"
)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10)
View(df_knn)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
plot(
lmPrice$fitted.values,
lmPrice$residuals,
col = "blue",
xlab = "fitted.values",
ylab = "residuals"
)
(predict(lmPrice, newData, interval = "confidence", level = 0.95))
exp(predict(lmPrice, newData, interval = "confidence", level = 0.95))
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10, imp_var = FALSE)
View(df_knn)
df_knn <- as.double(kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10, imp_var = FALSE))
View(df_knn)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10, imp_var = FALSE, numFun = weightedMean)
View(df_knn)
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10, imp_var = FALSE, weightDist=TRUE)
View(df_knn)
warnings()
df_knn = data
df_knn <- kNN(data, variable = c('Boost_Clock', 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 10, imp_var = FALSE)
View(df_knn)
df_knn_2 <- knn(data)
View(df_knn_2)
df_knn_2 <- knn(data)
df_knn_2 = data
df_knn_2 <- knn(data)
View(df_knn_2)
df_knn_2 <- kNN(data)
View(df_knn_2)
summary(df_knn)
summary(df_knn_2)
df_knn_2 <- kNN(data, imp_var = FALSE)
summary(df_knn)
summary(df_knn_2)
summary(df_mean)
df_knn <- kNN(data, variable = c("Boost_Clock", 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = 100, imp_var = FALSE)
summary(df_knn)
summary(df_mean)
summary(df_knn_2)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
df_mean['log.Boost_Clock'] <- log(df_mean['Boost_Clock'])
df_mean['log.Core_Speed'] <- log(df_mean['Core_Speed'])
df_mean['log.Max_Power'] <- log(df_mean['Max_Power'])
df_mean['log.Memory'] <- log(df_mean['Memory'])
df_mean['log.Memory_Bus'] <- log(df_mean['Memory_Bus'])
df_mean['log.Memory_Speed'] <- log(df_mean['Memory_Speed'])
df_mean['log.Release_Year'] <- log(df_mean['Release_Year'])
df_mean['log.Release_Price'] <- log(df_mean['Release_Price'])
df_mean['log.Shader'] <- log(df_mean['Shader'])
df_mean['log.TMUs'] <- log(df_mean['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
newData = data.frame(
log.Boost_Clock = c(mean(df[, 'log.Boost_Clock']), max(df[, 'log.Boost_Clock'])),
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
exp(newData)
plot(
lmPrice$fitted.values,
lmPrice$residuals,
col = "blue",
xlab = "fitted.values",
ylab = "residuals"
)
exp(predict(lmPrice, newData, interval = "confidence", level = 0.95))
length(data)
nrow(data)
df_knn <- kNN(data, variable = c("Boost_Clock", 'Core_Speed', 'Max_Power', 'Memory', 'Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price', 'Shader','TMUs'), k = sqrt(nrow(data)), imp_var = FALSE)
df_knn <- kNN(data, k = sqrt(nrow(data)), imp_var = FALSE)
summary(df_knn)
summary(df_mean)
df_mean = data %>% mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
summary(df_mean)
summary(df_knn)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
plot(
lmPrice$fitted.values,
lmPrice$residuals,
col = "blue",
xlab = "fitted.values",
ylab = "residuals"
)
Price.graph <-
ggplot(lmPrice, aes(x = Release_Price, y = Max_Power)) + geom_point()
Price.graph
Price.graph <-ggplot(lmPrice, aes(x = Release_Price, y = Max_Power)) + geom_point()
Price.graph
Price.graph <-ggplot(lmPrice, aes(x = log.Release_Price, y = Max_Power)) + geom_point()
Price.graph
Price.graph <-ggplot(lmPrice, aes(x = log.Release_Price, y = logMax_Power)) + geom_point()
Price.graph <-ggplot(lmPrice, aes(x = log.Release_Price, y = log.Max_Power)) + geom_point()
Price.graph
Price.graph <- Price.graph + geom_smooth(method = "lm", col = "black")
Price.graph
Price.graph <- Price.graph + geom_smooth(method = "lm", col = "blue")
Price.graph
Price.graph <-ggplot(lmPrice, aes(x = log.Release_Price, y = log.Memory)) + geom_point()
Price.graph
Price.graph <- Price.graph + geom_smooth(method = "lm", col = "blue")
Price.graph
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = log.Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$log.Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = log.Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$log.Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = log.Release_Year), stat = "count", fill = rainbow(20)) + scale_x_continuous(breaks = pretty(df$log.Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(20)) + scale_x_continuous(breaks = pretty(df$log.Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(20)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
exp(predict(lmPrice, newData, interval = "confidence", level = 0.95))
newData = data.frame(
log.Boost_Clock = c(mean(df[, 'log.Boost_Clock']), max(df[, 'log.Boost_Clock'])),
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
exp(newData)
exp(predict(lmPrice, newData, interval = "confidence", level = 0.95))
library(stats)
library(dplyr)
library(VIM)
library(magrittr)
library(ggplot2)
raw_data = read.csv('data.csv')
View(raw_data)
data = raw_data %>% select('Manufacturer','Name','Architecture','Boost_Clock','Core_Speed','Max_Power','Memory','Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price','Shader','TMUs');
df_drop = data %>% filter(!( is.na(Manufacturer) | is.na(Name) | is.na(Architecture) | is.na(Boost_Clock) | is.na(Core_Speed) | is.na(Max_Power) | is.na(Memory) | is.na(Memory_Bus) | is.na(Memory_Speed) | is.na(Release_Year) | is.na(Release_Price) | is.na(Shader) | is.na(TMUs)))
na_mean(data)
View(data)
df_mean = data %>% mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
View(df_mean)
View(df_drop)
View(df_mean)
summary(df_drop)
clear
cls
clr
summary(df_drop)
summary(df_drop)
df_mean = data %>% mutate_all(~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
View(df_mean)
summary(df_mean)
df_median = data %>% mutate_all(~ifelse(is.na(.x), median(.x, na.rm = TRUE), .x))
View(df_median)
summary(df_median)
df_knn <- kNN(data, k = sqrt(nrow(data)), imp_var = FALSE)
View(df_knn)
summary(df_knn)
summary(df_mean)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
View(df)
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
lmPriceNoMem = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPriceNoMem)
lmPrice_Mem = lm(log.Release_Price ~ log.Memory, df[, c('log.Release_Price', 'log.Memory')])
anova(lmPrice_Mem)
summary(lmPrice)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
df = df_mean
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
df = df_median
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
newData = data.frame(
log.Boost_Clock = c(mean(df[, 'log.Boost_Clock']), median(df[, 'log.Boost_Clock']), max(df[, 'log.Boost_Clock'])),
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), median(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), median(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), median(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), median(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), median(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), median(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), median(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
predict_Data = data.frame(
log.Boost_Clock = c(mean(df[, 'log.Boost_Clock']), median(df[, 'log.Boost_Clock']), max(df[, 'log.Boost_Clock'])),
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), median(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), median(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), median(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), median(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), median(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), median(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), median(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
gc()
View(newData)
predict_Data = data.frame(
log.Boost_Clock = c(mean(df[, 'log.Boost_Clock']), median(df[, 'log.Boost_Clock']), max(df[, 'log.Boost_Clock'])),
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), median(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), median(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), median(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), median(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), median(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), median(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), median(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
View(newData)
View(predict_Data)
exp(predict_Data)
exp(predict_Data)
predict(lmPrice, predict_Data, interval = "confidence", level = 0.95)
exp(predict(lmPrice, predict_Data, interval = "confidence", level = 0.95))
predict_abc = data.frame(
log.Boost_Clock = '1'
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), median(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), median(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), median(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), median(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), median(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), median(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), median(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
predict_abc = data.frame(
log.Boost_Clock = '1',
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), median(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), median(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), median(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), median(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), median(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), median(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), median(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
View(predict_abc)
predict_abc = data.frame(
log.Boost_Clock = log(1),
log.Core_Speed = c(mean(df[, 'log.Core_Speed']), median(df[, 'log.Core_Speed']), max(df[, 'log.Core_Speed'])),
log.Max_Power = c(mean(df[, 'log.Max_Power']), median(df[, 'log.Max_Power']), max(df[, 'log.Max_Power'])),
log.Memory = c(mean(df[, 'log.Memory']), median(df[, 'log.Memory']), max(df[, 'log.Memory'])),
log.Memory_Bus = c(mean(df[, 'log.Memory_Bus']), median(df[, 'log.Memory_Bus']), max(df[, 'log.Memory_Bus'])),
log.Memory_Speed = c(mean(df[, 'log.Memory_Speed']), median(df[, 'log.Memory_Speed']), max(df[, 'log.Memory_Speed'])),
log.Shader = c(mean(df[, 'log.Shader']), median(df[, 'log.Shader']), max(df[, 'log.Shader'])),
log.TMUs = c(mean(df[, 'log.TMUs']), median(df[, 'log.TMUs']), max(df[, 'log.TMUs']))
)
predict_abc = data.frame(
log.Boost_Clock = log(1700),
log.Core_Speed = log(1400),
log.Max_Power = log(360),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.Shader = log(10496),
log.TMUs =  log(328)
)
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
predict(lmPrice, predict_abc, interval = "confidence", level = 0.95)
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
df = df_drop
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(
log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs,
df
)
summary(lmPrice)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
predict_abc = data.frame(
log.Boost_Clock = log(1700),
log.Core_Speed = log(1400),
log.Max_Power = log(360),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.Shader = log(10496),
log.TMUs =  log(328)
)
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
predict_abc = data.frame(
log.Boost_Clock = log(1700),
log.Core_Speed = log(1400),
log.Max_Power = log(360),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.TMUs =  log(328)
)
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
predict_abc = data.frame(
log.Boost_Clock = log(1700),
log.Core_Speed = log(1400),
log.Max_Power = log(360),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.Shader = log(0),
log.TMUs =  log(328)
)
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
predict_abc = data.frame(
log.Boost_Clock = log(1695),
log.Core_Speed = log(1395),
log.Max_Power = log(350),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.Shader = log(10496),
log.TMUs =  log(328)
)
predict_RTX_3090 = data.frame(
log.Boost_Clock = log(1695),
log.Core_Speed = log(1395),
log.Max_Power = log(350),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.Shader = log(10496),
log.TMUs =  log(328)
)
exp(predict(lmPrice, predict_abc, interval = "confidence", level = 0.95))
spec_RTX_3090 = data.frame(
log.Boost_Clock = log(1695),
log.Core_Speed = log(1395),
log.Max_Power = log(350),
log.Memory = log(24576),
log.Memory_Bus = log(384),
log.Memory_Speed = log(1219),
log.Shader = log(10496),
log.TMUs =  log(328)
)
exp(predict(lmPrice, spec_RTX_3090, interval = "confidence", level = 0.95))
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs, df)
plot(lmPrice$fitted.values, lmPrice$residuals, col = "blue", xlab = "fitted.values", ylab = "residuals")
exp(predict(lmPrice, spec_RTX_3090, interval = "confidence", level = 0.95))
df = df_drop
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs, df)
exp(predict(lmPrice, spec_RTX_3090, interval = "confidence", level = 0.95))
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(20)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
ggplot(df) + geom_bar(aes(x = Release_Year), stat = "count", fill = rainbow(6)) + scale_x_continuous(breaks = pretty(df$Release_Year, n = 10)) + xlab("Year") + ylab("Number of GPUs")
