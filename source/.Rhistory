df = df_drop
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
lmPrice = lm(log.Release_Price ~ log.Boost_Clock + log.Core_Speed + log.Max_Power + log.Memory + log.Memory_Bus + log.Memory_Speed + log.Shader + log.TMUs, df)
exp(predict(lmPrice, spec_RTX_3090, interval = "confidence", level = 0.95))
# Exponential model
year_arr <- unique(sort(strtoi(df$Release_Year)))
memory_arr_mean = data.frame(df %>% group_by(Release_Year) %>% summarise_at(vars(Memory), list(name = mean)))
memory_arr_mean = array(memory_arr_mean$name)
memory_arr_median = data.frame(df %>% group_by(Release_Year) %>% summarise_at(vars(Memory), list(name = median)))
memory_arr_median = array(memory_arr_median$name)
calculateMooresValue <- function(x, y_trans) {
return(memory_arr_median[1] * 2**((x-y_trans)/2))
}
exponentialCurve <- function(x, a, b, c) {
return(a*2**((x-c)*b))
}
y_pred_moore_law_teoretic = calculateMooresValue(year_arr, year_arr[1])
popt <- c(1.04294249e+01, 3.55525954e-01, 1.99040139e+03)
y_pred_moore_law_fitted = exponentialCurve(year_arr, popt[1], popt[2], popt[3])
plot(x=year_arr, y=log(memory_arr_mean),type = "o",col = "skyblue3", xlab = "Year", ylab = "GPU Memory", main = "GPU Memory and Year of Release (logaritmic scale)")
lines(x=year_arr, y=log(memory_arr_median), type = "o", col = "sienna2")
lines(x=year_arr, y=log(y_pred_moore_law_teoretic), type = "o", col = "slateblue2")
lines(x=year_arr, y=log(y_pred_moore_law_fitted), type = "o", col = "seashell4")
df_e<-data.frame(Release_Year = year_arr, Memory_Mean = memory_arr_mean, Memory_Median = memory_arr_median, Moore_Teoretic = y_pred_moore_law_teoretic, Moore_Fitted = y_pred_moore_law_fitted)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(Memory_Mean), colour = "Mean"), n=1000) +
geom_line(aes(y = log(Memory_Median), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
# Polynomial
polynomial.fit(df_e, Release_Year, Memory_Mean, nterm = 2)
poly_2_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2), data=df_e)
summary(poly_2_mean)
poly_3_mean <- lm(Memory_Mean ~ poly(Release_Year, 3, raw = F), data=df_e)
summary(poly_3_mean)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (logaritmic scale)") +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = F), se=F, col = 'darkseagreen', n=1000) +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = F), se=F, col = 'darkgoldenrod1', n=1000) +
geom_smooth(method = lm, formula = y ~ poly(x,2), aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), se=F, n =1000) +
geom_smooth(method = lm, formula = y ~ poly(x,2), aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), se=F, n=1000)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
df_knn
year_arr <- unique(sort(strtoi(df$Release_Year)))
memory_arr_mean = data.frame(df %>% group_by(Release_Year) %>% summarise_at(vars(Memory), list(name = mean)))
memory_arr_mean = array(memory_arr_mean$name)
memory_arr_median = data.frame(df %>% group_by(Release_Year) %>% summarise_at(vars(Memory), list(name = median)))
memory_arr_median = array(memory_arr_median$name)
calculateMooresValue <- function(x, y_trans) {
return(memory_arr_median[1] * 2**((x-y_trans)/2))
}
exponentialCurve <- function(x, a, b, c) {
return(a*2**((x-c)*b))
}
y_pred_moore_law_teoretic = calculateMooresValue(year_arr, year_arr[1])
popt <- c(1.04294249e+01, 3.55525954e-01, 1.99040139e+03)
y_pred_moore_law_fitted = exponentialCurve(year_arr, popt[1], popt[2], popt[3])
plot(x=year_arr, y=log(memory_arr_mean),type = "o",col = "skyblue3", xlab = "Year", ylab = "GPU Memory", main = "GPU Memory and Year of Release (logaritmic scale)")
lines(x=year_arr, y=log(memory_arr_median), type = "o", col = "sienna2")
lines(x=year_arr, y=log(y_pred_moore_law_teoretic), type = "o", col = "slateblue2")
lines(x=year_arr, y=log(y_pred_moore_law_fitted), type = "o", col = "seashell4")
df_e<-data.frame(Release_Year = year_arr, Memory_Mean = memory_arr_mean, Memory_Median = memory_arr_median, Moore_Teoretic = y_pred_moore_law_teoretic, Moore_Fitted = y_pred_moore_law_fitted)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(Memory_Mean), colour = "Mean"), n=1000) +
geom_line(aes(y = log(Memory_Median), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
poly_2_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2), data=df_e)
summary(poly_2_mean)
poly_3_mean <- lm(Memory_Mean ~ poly(Release_Year, 3, raw = F), data=df_e)
summary(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ polym(Release_Year, 3, raw = F), data=df_e)
summary(poly_3_mean)
poly_3_mean
poly_2_mean <- lm(log(Memory_Mean) ~ Release_Year + I(Release_Year^2), data=df_e)
summary(poly_2_mean)
poly_3_mean <- lm(log(Memory_Mean) ~ poly(Release_Year, 3, raw = F), data=df_e)
poly_3_mean
summary(poly_3_mean)
poly_2_mean <- lm(log(Memory_Mean) ~ Release_Year + I(Release_Year^2), data=df_e)
summary(poly_2_mean)
poly_3_mean <- lm(Memory_Mean ~ poly(Release_Year, 3, raw = F), data=df_e)
summary(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2 + Release_Year^3), data=df_e)
summary(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_e)
summary(poly_3_mean)
poly_2_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2), data=df_e)
library(car)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(stats)
library(VIM)
raw_data = read.csv('data.csv')
data = raw_data %>% select('Manufacturer','Name','Architecture','Boost_Clock','Core_Speed','Max_Power','Memory','Memory_Bus', 'Memory_Speed', 'Release_Year', 'Release_Price','Shader','TMUs')
df_knn <- kNN(data, k = sqrt(nrow(data)), imp_var = FALSE)
df = df_knn
df['log.Boost_Clock'] <- log(df['Boost_Clock'])
df['log.Core_Speed'] <- log(df['Core_Speed'])
df['log.Max_Power'] <- log(df['Max_Power'])
df['log.Memory'] <- log(df['Memory'])
df['log.Memory_Bus'] <- log(df['Memory_Bus'])
df['log.Memory_Speed'] <- log(df['Memory_Speed'])
df['log.Release_Year'] <- log(df['Release_Year'])
df['log.Release_Price'] <- log(df['Release_Price'])
df['log.Shader'] <- log(df['Shader'])
df['log.TMUs'] <- log(df['TMUs'])
df_knn
year_arr <- unique(sort(strtoi(df$Release_Year)))
memory_arr_mean = data.frame(df %>% group_by(Release_Year) %>% summarise_at(vars(Memory), list(name = mean)))
memory_arr_mean = array(memory_arr_mean$name)
memory_arr_median = data.frame(df %>% group_by(Release_Year) %>% summarise_at(vars(Memory), list(name = median)))
memory_arr_median = array(memory_arr_median$name)
calculateMooresValue <- function(x, y_trans) {
return(memory_arr_median[1] * 2**((x-y_trans)/2))
}
exponentialCurve <- function(x, a, b, c) {
return(a*2**((x-c)*b))
}
y_pred_moore_law_teoretic = calculateMooresValue(year_arr, year_arr[1])
popt <- c(1.04294249e+01, 3.55525954e-01, 1.99040139e+03)
y_pred_moore_law_fitted = exponentialCurve(year_arr, popt[1], popt[2], popt[3])
plot(x=year_arr, y=log(memory_arr_mean),type = "o",col = "skyblue3", xlab = "Year", ylab = "GPU Memory", main = "GPU Memory and Year of Release (logaritmic scale)")
lines(x=year_arr, y=log(memory_arr_median), type = "o", col = "sienna2")
lines(x=year_arr, y=log(y_pred_moore_law_teoretic), type = "o", col = "slateblue2")
lines(x=year_arr, y=log(y_pred_moore_law_fitted), type = "o", col = "seashell4")
df_e<-data.frame(Release_Year = year_arr, Memory_Mean = memory_arr_mean, Memory_Median = memory_arr_median, Moore_Teoretic = y_pred_moore_law_teoretic, Moore_Fitted = y_pred_moore_law_fitted)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(Memory_Mean), colour = "Mean"), n=1000) +
geom_line(aes(y = log(Memory_Median), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
# Polynomial
poly_2_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2), data=df_e)
summary(poly_2_mean)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_e)
summary(poly_3_mean)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (logaritmic scale)") +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = F), se=F, col = 'darkseagreen', n=1000) +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = F), se=F, col = 'darkgoldenrod1', n=1000) +
geom_smooth(method = lm, formula = y ~ poly(x,2), aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), se=F, n =1000) +
geom_smooth(method = lm, formula = y ~ poly(x,2), aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), se=F, n=1000)
poly_2_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2), data=df_e)
summary(poly_2_mean)
y_pred_lin_reg_2 <- data.frame(Release_Year = year_arr)
y_pred_lin_reg_2 <- predict(poly_2_mean, year_arr, type="response")
y_pred_lin_reg_2 <- predict(poly_2_mean, y_pred_lin_reg_2, type="response")
y_pred_lin_reg_2
year_df <- data.frame(year_arr)
y_pred_lin_reg_2 <- predict(poly_2_mean, year_df, type="response")
year_df <- data.frame(Release_Year = year_arr)
y_pred_lin_reg_2 <- predict(poly_2_mean, year_df, type="response")
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_e)
summary(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_e)
summary(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ poly(Release_Year, 3, raw = F), data=df_e)
summary(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ poly(Release_Year, T, raw = F), data=df_e)
poly_3_mean <- lm(Memory_Mean ~ poly(Release_Year, 3, raw = T), data=df_e)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_e)
summary(poly_3_mean)
View(poly_3_mean)
View(poly_2_mean)
View(poly_3_mean)
coef(poly_2_mean)
poly_3_mean$coefficients[2:4] <- c(2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
y_pred_lin_reg_3
poly_3_mean$coefficients[2:4] <- c(2.56615577e+07, -1.28150909e+04,  2.13323868e+00, 0)
poly_3_mean$coefficients[1:4] <- c(0, 2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
View(poly_3_mean)
poly_3_mean$ranks <- c(4)
poly_2_test = poly_2_mean
poly_2_test$coefficients[2:3] <- c(-1.29530723e+05,  3.23390634e+01)
y_pred_lin_reg_2 <- predict(poly_2_test, year_df, type="response")
coef(poly_2_test)
coef(poly_2_mean)
y_pred_lin_reg_2
y_pred_lin_reg_2 <- predict(poly_2_mean, year_df, type="response")
y_pred_lin_reg_2
poly_2_test$coefficients[1:3] <- c(0,-1.29530723e+05,  3.23390634e+01)
y_pred_lin_reg_2 <- predict(poly_2_test, year_df, type="response")
y_pred_lin_reg_2
poly_2_test$coefficients[1:3] <- c(129705240.80510715,-1.29530723e+05,  3.23390634e+01)
y_pred_lin_reg_2 <- predict(poly_2_test, year_df, type="response")
y_pred_lin_reg_2
poly_3_mean$coefficients[1:4] <- c(17128661108.085476, 2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
y_pred_lin_reg_3
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
poly_3_mean$effects[2] <- c(4)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
y_pred_lin_reg_3
poly_3_mean[["rank"]]
poly_3_mean$effects[1] <- c(4)
poly_3_mean$coefficients[1:4] <- c(17128661108.085476, 2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
View(poly_3_mean)
poly_3_mean$effects[21] <- c(4)
View(poly_3_mean)
poly_3_mean$rank <- c(4)
View(poly_3_mean)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
y_pred_lin_reg_3
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_e)
poly_3_mean$coefficients[1:4] <- c(17128661108.085476, 2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
poly_3_mean$rank <- c(4)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
y_pred_lin_reg_3
View(poly_3_mean)
poly_3_mean$coefficients[1:4] <- c(-17128661108.085476, 2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
y_pred_lin_reg_3 <- predict(poly_3_mean, year_df, type="response")
y_pred_lin_reg_3
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(y_pred_lin_reg_2), colour = "Mean"), n=1000) +
geom_line(aes(y = log(y_pred_lin_reg_3), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(y_pred_lin_reg_2), colour = "Mean")) +
geom_line(aes(y = log(y_pred_lin_reg_3), colour = "Median")) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
df_e$y_pred_lin_reg_2 <- y_pred_lin_reg_2
View(df_e)
df_e$y_pred_lin_reg_3 <- y_pred_lin_reg_3
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(y_pred_lin_reg_2), colour = "Mean"), n=1000) +
geom_line(aes(y = log(y_pred_lin_reg_3), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(y_pred_lin_reg_2), colour = "Mean"), n=1000) +
geom_line(aes(y = log(y_pred_lin_reg_3), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(y_pred_lin_reg_2), colour = "Mean"), n=1000) +
geom_line(aes(y = log(y_pred_lin_reg_3), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "Mean"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "Mean"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_e, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
coef(poly_2_mean)
y_pred_lin_reg_2
y_pred_lin_reg_2
plot(x=year_arr, y=log(memory_arr_mean),type = "o",col = "skyblue3", xlab = "Year", ylab = "GPU Memory", main = "GPU Memory and Year of Release (logaritmic scale)")
lines(x=year_arr, y=log(memory_arr_median), type = "o", col = "sienna2")
lines(x=year_arr, y=log(y_pred_moore_law_teoretic), type = "o", col = "slateblue2")
lines(x=year_arr, y=log(y_pred_moore_law_fitted), type = "o", col = "seashell4")
df_extra<-data.frame(Release_Year = year_arr, Memory_Mean = memory_arr_mean, Memory_Median = memory_arr_median, Moore_Teoretic = y_pred_moore_law_teoretic, Moore_Fitted = y_pred_moore_law_fitted)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(Memory_Mean), colour = "Mean"), n=1000) +
geom_line(aes(y = log(Memory_Median), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
df_extra$Y_pred_lin_reg_2 <- y_pred_lin_reg_2
View(df_extra)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.2)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 1)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (original scale)") +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = log(Memory_Mean), colour = "Mean"), n=1000) +
geom_line(aes(y = log(Memory_Median), colour = "Median"), n=1000) +
geom_line(aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), n=1000)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_extra)
summary(poly_3_mean)
alias(poly_3_mean)
cor(poly_3_mean)
poly_3_mean <- lm(Memory_Mean ~ Release_Year + I(Release_Year^2) + I(Release_Year^3), data=df_extra)
summary(poly_3_mean)
poly_3_mean$coefficients[1:4] <- c(-17128661108.085476, 2.56615577e+07, -1.28150909e+04,  2.13323868e+00)
poly_3_mean$rank <- c(4)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (logaritmic scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000) +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial model vs Exponential model") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000) +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Exponential model vs Polynomial model") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000) +
geom_line(aes(y = Memory_Mean, colour = "Mean"), n=1000) +
geom_line(aes(y = Memory_Median, colour = "Median"), n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() + geom_point(size = 1) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("Polynomial graph for GPU Memory and Year of Release (original scale)") +
stat_smooth(method = lm, formula = y ~ poly(x, 2, raw = F), se=F, col = 'darkseagreen', n=1000) +
stat_smooth(method = lm, formula = y ~ poly(x, 3, raw = F), se=F, col = 'darkgoldenrod1', n=1000) +
geom_smooth(method = lm, formula = y ~ poly(x,2), aes(y = log(Moore_Teoretic), colour = "Moore's law teoretic"), se=F, n =1000) +
geom_smooth(method = lm, formula = y ~ poly(x,2), aes(y = log(Moore_Fitted), colour = "Moore's law fitted"), se=F, n=1000)
ggplot(df_extra, aes(x = Release_Year, y = log(Memory_Mean))) +  theme_classic() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 20)) +
theme(legend.position='bottom', plot.title = element_text(hjust = 0.5)) +
xlab("Year") + ylab("GPU Memory") + labs(colour="") +
ggtitle("teoreticPolynomial graph for GPU Memory and Year of Release (original scale)") +
geom_line(aes(y = y_pred_lin_reg_2, colour = "2nd degree polynomial"), n=1000) +
geom_line(aes(y = y_pred_lin_reg_3, colour = "3rd degree polynomial"), n=1000) +
geom_line(aes(y = Moore_Teoretic, colour = "Moore's law teoretic"), n=1000) +
geom_line(aes(y = Moore_Fitted, colour = "Moore's law fitted"), n=1000)
aovtest <- select(df, Manufacturer, log.Core_Speed)
ggqqplot(aovCore_Speed$log.Core_Speed)
aovCore_Speed <- select(df, Manufacturer, log.Core_Speed)
ggqqplot(aovCore_Speed$log.Core_Speed)
ggqqplot(aovtest$log.Core_Speed)
